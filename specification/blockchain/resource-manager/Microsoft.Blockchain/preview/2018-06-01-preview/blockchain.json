{
  "swagger": "2.0",
  "info": {
    "version": "2018-06-01-preview",
    "title": "BlockchainManagementClient",
    "description": "REST API for Azure Blockchain Service"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Blockchain/blockchainMembers/{blockchainMemberName}": {
      "get": {
        "tags": [
          "BlockchainMember"
        ],
        "description": "Get blockchain member",
        "operationId": "BlockchainMembers_Get",
        "parameters": [
          {
            "name": "blockchainMemberName",
            "in": "path",
            "description": "Blockchain member name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BlockchainMember"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "x-ms-examples": {
          "BlockchainMembers_Get": {
            "$ref": "./examples/BlockchainMembers_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "BlockchainMember"
        ],
        "description": "Create blockchain member",
        "operationId": "BlockchainMembers_Put",
        "parameters": [
          {
            "name": "blockchainMemberName",
            "in": "path",
            "description": "Blockchain member name",
            "required": true,
            "type": "string"
          },
          {
            "name": "blockchainMember",
            "in": "body",
            "description": "ARM BlockchainMember payload to create",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BlockchainMember"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BlockchainMember"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BlockchainMember"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "BlockchainMembers_Put": {
            "$ref": "./examples/BlockchainMembers_Put.json"
          }
        }
      },
      "delete": {
        "tags": [
          "BlockchainMember"
        ],
        "description": "Delete blockchain member",
        "operationId": "BlockchainMembers_Delete",
        "parameters": [
          {
            "name": "blockchainMemberName",
            "in": "path",
            "description": "Blockchain member name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "BlockchainMembers_Delete": {
            "$ref": "./examples/BlockchainMembers_Delete.json"
          }
        }
      },
      "patch": {
        "tags": [
          "BlockchainMember"
        ],
        "description": "Update blockchain member",
        "operationId": "BlockchainMembers_Update",
        "parameters": [
          {
            "name": "blockchainMemberName",
            "in": "path",
            "description": "Blockchain member name",
            "required": true,
            "type": "string"
          },
          {
            "name": "blockchainMember",
            "in": "body",
            "description": "ARM BlockchainMember payload to be updated",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BlockchainMember"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BlockchainMember"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "x-ms-examples": {
          "BlockchainMembers_Update": {
            "$ref": "./examples/BlockchainMembers_Update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Blockchain/blockchainMembers": {
      "get": {
        "tags": [
          "BlockchainMember"
        ],
        "description": "List blockchain members of a resource group in a subscription",
        "operationId": "BlockchainMembers_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BlockchainMemberCollection"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "BlockchainMembers_List": {
            "$ref": "./examples/BlockchainMembers_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Blockchain/blockchainMembers": {
      "get": {
        "tags": [
          "BlockchainMember"
        ],
        "description": "List blockchain members of a subscription",
        "operationId": "BlockchainMembers_ListAll",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BlockchainMemberCollection"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "BlockchainMembers_ListAll": {
            "$ref": "./examples/BlockchainMembers_ListAll.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Blockchain/blockchainMembers/{blockchainMemberName}/consortiumMembers": {
      "get": {
        "tags": [
          "BlockchainMember"
        ],
        "description": "List consortium members for a blockchain member",
        "operationId": "BlockchainMembers_ListConsortiumMembers",
        "parameters": [
          {
            "name": "blockchainMemberName",
            "in": "path",
            "description": "Blockchain member name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ConsortiumMemberCollection"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "BlockchainMembers_ListConsortiumMembers": {
            "$ref": "./examples/BlockchainMembers_ListConsortiumMembers.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Blockchain/blockchainMembers/{blockchainMemberName}/listApiKeys": {
      "post": {
        "tags": [
          "BlockchainMember"
        ],
        "description": "List blockchain member api keys",
        "operationId": "BlockchainMembers_ListApiKeys",
        "parameters": [
          {
            "name": "blockchainMemberName",
            "in": "path",
            "description": "Blockchain member name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiKeyCollection"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "x-ms-examples": {
          "BlockchainMembers_ListApiKeys": {
            "$ref": "./examples/BlockchainMembers_ListApiKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Blockchain/blockchainMembers/{blockchainMemberName}/regenerateApiKeys": {
      "post": {
        "tags": [
          "BlockchainMember"
        ],
        "description": "Regenerate blockchain member api key",
        "operationId": "BlockchainMembers_RegenerateApiKeys",
        "parameters": [
          {
            "name": "blockchainMemberName",
            "in": "path",
            "description": "Blockchain member name",
            "required": true,
            "type": "string"
          },
          {
            "name": "apiKey",
            "in": "body",
            "description": "api key to be regenerate",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ApiKey"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiKeyCollection"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "x-ms-examples": {
          "BlockchainMembers_RegenerateApiKeys": {
            "$ref": "./examples/BlockchainMembers_RegenerateApiKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Blockchain/blockchainMembers/{blockchainMemberName}/statusStatistics": {
      "get": {
        "tags": [
          "BlockchainMemberMetric"
        ],
        "description": "Get blockchain member metric of status statistics",
        "operationId": "BlockchainMemberMetrics_StatusStatistics",
        "parameters": [
          {
            "name": "blockchainMemberName",
            "in": "path",
            "description": "Blockchain member name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StatusStatistics"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "x-ms-examples": {
          "BlockchainMemberMetrics_StatusStatistics": {
            "$ref": "./examples/BlockchainMemberMetrics_StatusStatistics.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Blockchain/blockchainMembers/{blockchainMemberName}/blocks": {
      "get": {
        "tags": [
          "BlockchainMemberMetric"
        ],
        "description": "Get blockchain member metric of blocks",
        "operationId": "BlockchainMemberMetrics_Blocks",
        "parameters": [
          {
            "name": "blockchainMemberName",
            "in": "path",
            "description": "Blockchain member name",
            "required": true,
            "type": "string"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Block count",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Block"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "x-ms-examples": {
          "BlockchainMemberMetrics_Blocks": {
            "$ref": "./examples/BlockchainMemberMetrics_Blocks.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Blockchain/blockchainMembers/{blockchainMemberName}/recentTransactions": {
      "get": {
        "tags": [
          "BlockchainMemberMetric"
        ],
        "description": "Get blockchain member metric of recent transactions",
        "operationId": "BlockchainMemberMetrics_RecentTransactions",
        "parameters": [
          {
            "name": "blockchainMemberName",
            "in": "path",
            "description": "Blockchain member name",
            "required": true,
            "type": "string"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Transaction count",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Transaction"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "x-ms-examples": {
          "BlockchainMemberMetrics_RecentTransactions": {
            "$ref": "./examples/BlockchainMemberMetrics_RecentTransactions.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Blockchain/blockchainMembers/{blockchainMemberName}/operations/{operationId}": {
      "get": {
        "tags": [
          "BlockchainMemberOperationResult"
        ],
        "description": "Operation Result Contorller",
        "operationId": "BlockchainMemberOperationResults_GetOperationResult",
        "parameters": [
          {
            "name": "blockchainMemberName",
            "in": "path",
            "description": "Blockchain member name",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "monitor",
            "in": "query",
            "description": "Flag which if true returns OperationResultEntity and if false returns the status of te request",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BlockchainMember"
            }
          },
          "202": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "BlockchainMemberOperationResults_GetOperationResult": {
            "$ref": "./examples/BlockchainMemberOperationResults_GetOperationResult.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Blockchain/blockchainMembers/{blockchainMemberName}/fabricIdentity/listConnectionProfiles": {
      "post": {
        "tags": [
          "HLFIdentity"
        ],
        "description": "Get HLF connection profile which includes the client connection options including the TLS CA root certificate information.",
        "operationId": "HLFIdentitys_ListServiceConnectionProfile",
        "parameters": [
          {
            "name": "blockchainMemberName",
            "in": "path",
            "description": "Blockchain member name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HLFConnectionProfile"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "x-ms-examples": {
          "HLFIdentitys_ListServiceConnectionProfile": {
            "$ref": "./examples/HLFIdentitys_ListServiceConnectionProfile.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Blockchain/blockchainMembers/{blockchainMemberName}/fabricIdentity/listMemberMSP": {
      "post": {
        "tags": [
          "HLFIdentity"
        ],
        "description": "List HLF Membership service provider certificate information",
        "operationId": "HLFIdentitys_ListMemberMSP",
        "parameters": [
          {
            "name": "blockchainMemberName",
            "in": "path",
            "description": "Blockchain member name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HLFMembershipServiceProvider"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "x-ms-examples": {
          "HLFIdentitys_ListMemberMSP": {
            "$ref": "./examples/HLFIdentitys_ListMemberMSP.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Blockchain/locations/{locationName}/checkNameAvailability": {
      "post": {
        "tags": [
          "Location"
        ],
        "description": "Check whether a resource name is available",
        "operationId": "Locations_CheckNameAvailability",
        "parameters": [
          {
            "name": "nameAvailabilityRequest",
            "in": "body",
            "description": "ARM NameAvailabilityRequest payload",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NameAvailabilityRequest"
            }
          },
          {
            "name": "locationName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NameAvailability"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "x-ms-examples": {
          "Locations_CheckNameAvailability": {
            "$ref": "./examples/Locations_CheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Blockchain/locations/{locationName}/listConsortiums": {
      "post": {
        "tags": [
          "Location"
        ],
        "description": "List available consortiums for a subscription",
        "operationId": "Locations_ListAvailableConsortiums",
        "parameters": [
          {
            "name": "locationName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ConsortiumCollection"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "x-ms-examples": {
          "Locations_ListAvailableConsortiums": {
            "$ref": "./examples/Locations_ListAvailableConsortiums.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Blockchain/locations/{locationName}/blockchainMemberOperationResults/{operationId}": {
      "get": {
        "tags": [
          "LocationOperationResult"
        ],
        "description": "Get async operation result",
        "operationId": "LocationOperationResults_Get",
        "parameters": [
          {
            "name": "locationName",
            "in": "path",
            "description": "Location name",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "LocationOperationResults_Get": {
            "$ref": "./examples/LocationOperationResults_Get.json"
          }
        }
      }
    },
    "/providers/Microsoft.Blockchain/operations": {
      "get": {
        "tags": [
          "Operation"
        ],
        "description": "List Microsoft.Blockchain Resource Provider available operations",
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ResourceProviderOperationCollection"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Blockchain/blockchainMembers/{blockchainMemberName}/ordererNodes/{ordererNodeName}": {
      "get": {
        "tags": [
          "OrdererNode"
        ],
        "description": "Get an Orderer node",
        "operationId": "OrdererNodes_Get",
        "parameters": [
          {
            "name": "blockchainMemberName",
            "in": "path",
            "description": "Blockchain member name",
            "required": true,
            "type": "string"
          },
          {
            "name": "ordererNodeName",
            "in": "path",
            "description": "Orderer node name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HLFOrdererNode"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "x-ms-examples": {
          "OrdererNodes_Get": {
            "$ref": "./examples/OrdererNodes_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "OrdererNode"
        ],
        "description": "Add Orderer node",
        "operationId": "OrdererNodes_Create",
        "parameters": [
          {
            "name": "blockchainMemberName",
            "in": "path",
            "description": "Blockchain member name",
            "required": true,
            "type": "string"
          },
          {
            "name": "ordererNodeName",
            "in": "path",
            "description": "Orderer node name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HLFOrdererNode"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "x-ms-examples": {
          "OrdererNodes_Create": {
            "$ref": "./examples/OrdererNodes_Create.json"
          }
        }
      },
      "delete": {
        "tags": [
          "OrdererNode"
        ],
        "description": "Remove Orderer node",
        "operationId": "OrdererNodes_Delete",
        "parameters": [
          {
            "name": "blockchainMemberName",
            "in": "path",
            "description": "Blockchain member name",
            "required": true,
            "type": "string"
          },
          {
            "name": "ordererNodeName",
            "in": "path",
            "description": "Orderer node name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "x-ms-examples": {
          "OrdererNodes_Delete": {
            "$ref": "./examples/OrdererNodes_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Blockchain/blockchainMembers/{blockchainMemberName}/ordererNodes": {
      "get": {
        "tags": [
          "OrdererNode"
        ],
        "description": "List Orderer nodes",
        "operationId": "OrdererNodes_List",
        "parameters": [
          {
            "name": "blockchainMemberName",
            "in": "path",
            "description": "Blockchain member name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HLFOrdererNodeCollection"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "x-ms-examples": {
          "OrdererNodes_List": {
            "$ref": "./examples/OrdererNodes_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Blockchain/blockchainMembers/{blockchainMemberName}/peerNodes/{peerNodeName}": {
      "get": {
        "tags": [
          "PeerNode"
        ],
        "description": "Get a Peer node",
        "operationId": "PeerNodes_Get",
        "parameters": [
          {
            "name": "blockchainMemberName",
            "in": "path",
            "description": "Blockchain member name",
            "required": true,
            "type": "string"
          },
          {
            "name": "peerNodeName",
            "in": "path",
            "description": "Peer node name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HLFPeerNode"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "x-ms-examples": {
          "PeerNodes_Get": {
            "$ref": "./examples/PeerNodes_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "PeerNode"
        ],
        "description": "Add a Peer node",
        "operationId": "PeerNodes_Add",
        "parameters": [
          {
            "name": "blockchainMemberName",
            "in": "path",
            "description": "Blockchain member name",
            "required": true,
            "type": "string"
          },
          {
            "name": "peerNodeName",
            "in": "path",
            "description": "Peer node name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HLFPeerNode"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "PeerNodes_Add": {
            "$ref": "./examples/PeerNodes_Add.json"
          }
        }
      },
      "delete": {
        "tags": [
          "PeerNode"
        ],
        "description": "Remove a Peer node",
        "operationId": "PeerNodes_Remove",
        "parameters": [
          {
            "name": "blockchainMemberName",
            "in": "path",
            "description": "Blockchain member name",
            "required": true,
            "type": "string"
          },
          {
            "name": "peerNodeName",
            "in": "path",
            "description": "Peer node name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HLFPeerNode"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "PeerNodes_Remove": {
            "$ref": "./examples/PeerNodes_Remove.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Blockchain/blockchainMembers/{blockchainMemberName}/peerNodes": {
      "get": {
        "tags": [
          "PeerNode"
        ],
        "description": "List Peer nodes",
        "operationId": "PeerNodes_List",
        "parameters": [
          {
            "name": "blockchainMemberName",
            "in": "path",
            "description": "Blockchain member name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HLFPeerNodeCollection"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "PeerNodes_List": {
            "$ref": "./examples/PeerNodes_List.json"
          }
        }
      }
    },
    "/skus": {
      "get": {
        "tags": [
          "Sku"
        ],
        "description": "List the resource type skus",
        "operationId": "Skus_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ResourceTypeSkuCollection"
            }
          }
        },
        "x-ms-examples": {
          "Skus_List": {
            "$ref": "./examples/Skus_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}": {
      "put": {
        "tags": [
          "Subscription"
        ],
        "description": "Creates or updates a subscription for Microsoft.Blockchain resource provider. Currently there is noop in our scenario.",
        "operationId": "Subscriptions_Put",
        "parameters": [
          {
            "name": "subscriptionRequest",
            "in": "body",
            "description": "subscriptionRequest",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Subscriptions_Put": {
            "$ref": "./examples/Subscriptions_Put.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Blockchain/blockchainMembers/{blockchainMemberName}/transactionNodes/{transactionNodeName}": {
      "get": {
        "tags": [
          "TransactionNode"
        ],
        "description": "Get transaction node",
        "operationId": "TransactionNodes_Get",
        "parameters": [
          {
            "name": "blockchainMemberName",
            "in": "path",
            "description": "Blockchain member name",
            "required": true,
            "type": "string"
          },
          {
            "name": "transactionNodeName",
            "in": "path",
            "description": "Transaction node name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TransactionNode"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "x-ms-examples": {
          "TransactionNodes_Get": {
            "$ref": "./examples/TransactionNodes_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "TransactionNode"
        ],
        "description": "Create or update transaction node",
        "operationId": "TransactionNodes_Put",
        "parameters": [
          {
            "name": "blockchainMemberName",
            "in": "path",
            "description": "Blockchain member name",
            "required": true,
            "type": "string"
          },
          {
            "name": "transactionNodeName",
            "in": "path",
            "description": "Transaction node name",
            "required": true,
            "type": "string"
          },
          {
            "name": "transactionNode",
            "in": "body",
            "description": "ARM TransactionNode payload to create",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TransactionNode"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TransactionNode"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TransactionNode"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "TransactionNodes_Put": {
            "$ref": "./examples/TransactionNodes_Put.json"
          }
        }
      },
      "delete": {
        "tags": [
          "TransactionNode"
        ],
        "description": "Delete transaction node",
        "operationId": "TransactionNodes_Delete",
        "parameters": [
          {
            "name": "blockchainMemberName",
            "in": "path",
            "description": "Blockchain member name",
            "required": true,
            "type": "string"
          },
          {
            "name": "transactionNodeName",
            "in": "path",
            "description": "Transaction node name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "TransactionNodes_Delete": {
            "$ref": "./examples/TransactionNodes_Delete.json"
          }
        }
      },
      "patch": {
        "tags": [
          "TransactionNode"
        ],
        "description": "Update transaction node",
        "operationId": "TransactionNodes_Patch",
        "parameters": [
          {
            "name": "blockchainMemberName",
            "in": "path",
            "description": "Blockchain member name",
            "required": true,
            "type": "string"
          },
          {
            "name": "transactionNodeName",
            "in": "path",
            "description": "Transaction node name",
            "required": true,
            "type": "string"
          },
          {
            "name": "transactionNode",
            "in": "body",
            "description": "ARM TransactionNode payload to create",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TransactionNode"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TransactionNode"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TransactionNode"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "TransactionNodes_Patch": {
            "$ref": "./examples/TransactionNodes_Patch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Blockchain/blockchainMembers/{blockchainMemberName}/transactionNodes": {
      "get": {
        "tags": [
          "TransactionNode"
        ],
        "description": "List transaction nodes",
        "operationId": "TransactionNodes_List",
        "parameters": [
          {
            "name": "blockchainMemberName",
            "in": "path",
            "description": "Blockchain member name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TransactionNodeCollection"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "x-ms-examples": {
          "TransactionNodes_List": {
            "$ref": "./examples/TransactionNodes_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Blockchain/blockchainMembers/{blockchainMemberName}/transactionNodes/{transactionNodeName}/listApiKeys": {
      "post": {
        "tags": [
          "TransactionNode"
        ],
        "description": "List transaction node api keys",
        "operationId": "TransactionNodes_ListApiKeys",
        "parameters": [
          {
            "name": "blockchainMemberName",
            "in": "path",
            "description": "Blockchain member name",
            "required": true,
            "type": "string"
          },
          {
            "name": "transactionNodeName",
            "in": "path",
            "description": "Transaction node name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiKeyCollection"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "x-ms-examples": {
          "TransactionNodes_ListApiKeys": {
            "$ref": "./examples/TransactionNodes_ListApiKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Blockchain/blockchainMembers/{blockchainMemberName}/transactionNodes/{transactionNodeName}/regenerateApiKeys": {
      "post": {
        "tags": [
          "TransactionNode"
        ],
        "description": "Regenerate blockchain member api key",
        "operationId": "TransactionNodes_RegenerateApiKeys",
        "parameters": [
          {
            "name": "blockchainMemberName",
            "in": "path",
            "description": "Blockchain member name",
            "required": true,
            "type": "string"
          },
          {
            "name": "transactionNodeName",
            "in": "path",
            "description": "Transaction node name",
            "required": true,
            "type": "string"
          },
          {
            "name": "apiKey",
            "in": "body",
            "description": "api key to be regenerate",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ApiKey"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiKeyCollection"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "x-ms-examples": {
          "TransactionNodes_RegenerateApiKeys": {
            "$ref": "./examples/TransactionNodes_RegenerateApiKeys.json"
          }
        }
      }
    }
  },
  "definitions": {
    "BlockchainMember": {
      "description": "ARM Resource BlockchainMember payload which exposed as Resource Provider request/response.",
      "type": "object",
      "properties": {
        "location": {
          "description": "Gets or sets blockchain member location",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets blockchain member name",
          "type": "string"
        },
        "kind": {
          "description": "Gets blockchain kind",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/BlockchainMemberProperties",
          "description": "Gets or sets blockchain member properties"
        },
        "type": {
          "description": "Gets blockchain member ARM resource type",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "description": "Gets blockchain member ARM resource id",
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "description": "Gets or sets blockchain member tags",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "Gets or sets blockchain member sku"
        }
      }
    },
    "BlockchainMemberProperties": {
      "description": "BlockchainMemberProperties payload in ARM Resource BlockchainMember payload.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Gets or sets blockchain member provision state",
          "enum": [
            "NotSpecified",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Stale",
            "Suspending",
            "Suspended"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BlockchainMemberProvisioningState",
            "modelAsString": true
          }
        },
        "dns": {
          "description": "Gets or sets blockchain member dns endpoint",
          "type": "string"
        },
        "protocol": {
          "description": "Gets or sets blockchain protocol",
          "enum": [
            "NotSpecified",
            "Parity",
            "Quorum",
            "Corda",
            "HyperledgerFabric"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BlockchainProtocol",
            "modelAsString": true
          }
        }
      }
    },
    "Sku": {
      "description": "Blockchain member SKU in ARM payload",
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets SKU name",
          "type": "string"
        },
        "tier": {
          "description": "Gets or sets SKU tier",
          "type": "string"
        }
      }
    },
    "BlockchainMemberCollection": {
      "description": "Collection of ARM Resource BlockchainMember payload which exposed as Resource Provider request/response.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets collection of blockchain members",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/BlockchainMember"
          }
        }
      }
    },
    "ConsortiumMemberCollection": {
      "description": "Collection of consortium payload",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets collection of consortiums",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsortiumMember"
          }
        }
      }
    },
    "ConsortiumMember": {
      "description": "Consortium Member object",
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets consortium member name",
          "type": "string"
        },
        "displayName": {
          "description": "Gets or sets consortium member display name",
          "type": "string"
        },
        "subscriptionId": {
          "description": "Gets or sets consortium member subscription id",
          "type": "string"
        },
        "role": {
          "description": "Gets or sets consortium member role",
          "type": "string"
        },
        "status": {
          "description": "Gets or sets consortium member status",
          "type": "string"
        },
        "joinDate": {
          "format": "date-time",
          "description": "Gets or sets consortium member join date",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "description": "Gets or sets consortium modified date",
          "type": "string"
        }
      }
    },
    "ApiKeyCollection": {
      "description": "Collection of ARM Resource ApiKey payload which exposed as Resource Provider response.",
      "type": "object",
      "properties": {
        "keys": {
          "description": "Gets or sets collection of ApiKey",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiKey"
          }
        }
      }
    },
    "ApiKey": {
      "description": "ARM Resource ApiKey payload which exposed as Resource Provider request/response.",
      "type": "object",
      "properties": {
        "keyName": {
          "description": "Gets or sets api key name",
          "type": "string"
        },
        "value": {
          "description": "Gets or sets api key value",
          "type": "string"
        }
      }
    },
    "StatusStatistics": {
      "description": "Status for the blockchain application",
      "type": "object",
      "properties": {
        "tps": {
          "format": "double",
          "description": "Gets or sets transaction per seconds",
          "type": "number"
        },
        "rangedTxns": {
          "format": "int32",
          "description": "Gets or sets number of transactions processed in specific time range",
          "type": "integer"
        },
        "blockHeight": {
          "format": "int64",
          "description": "Gets or sets block height",
          "type": "integer"
        }
      }
    },
    "Block": {
      "description": "Block",
      "type": "object",
      "properties": {
        "hash": {
          "description": "Gets or sets block hash",
          "type": "string"
        },
        "parent": {
          "description": "Gets or sets parent block hash",
          "type": "string"
        },
        "miner": {
          "description": "Gets or sets miner address",
          "type": "string"
        },
        "number": {
          "description": "Gets or sets block number",
          "type": "string"
        },
        "size": {
          "description": "Gets or sets the byte size to the block",
          "type": "string"
        },
        "timestamp": {
          "description": "Gets or sets the block unix timestamp in seconds",
          "type": "string"
        },
        "transactions": {
          "description": "Gets or sets transactions precessed in the block",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transaction"
          }
        }
      }
    },
    "Transaction": {
      "description": "Blockchain transaction",
      "type": "object",
      "properties": {
        "from": {
          "description": "Gets or sets the source of the transaction",
          "type": "string"
        },
        "to": {
          "description": "Gets or sets the destnation of the transaction",
          "type": "string"
        },
        "hash": {
          "description": "Gets or sets the transaction hash",
          "type": "string"
        },
        "value": {
          "description": "Gets or sets the amount of value transferred",
          "type": "string"
        },
        "timestamp": {
          "format": "int64",
          "description": "Gets or sets the unix timestamp occurred",
          "type": "integer"
        }
      }
    },
    "HLFConnectionProfile": {
      "description": "Gets or sets HLFConnectionProfile",
      "type": "object",
      "properties": {
        "client": {
          "$ref": "#/definitions/ConnectionProfileClient",
          "description": "Gets or sets ConnectionProfileClient"
        },
        "name": {
          "description": "Gets or sets Name in Connection Profile",
          "type": "string"
        },
        "organizations": {
          "description": "Gets Organizations in Connection Profile",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Organization"
          },
          "readOnly": true
        },
        "peers": {
          "description": "Gets Peers in Connection Profile",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/NodeProperties"
          },
          "readOnly": true
        },
        "orderers": {
          "description": "Gets Orderers in Connection Profile",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/NodeProperties"
          },
          "readOnly": true
        },
        "version": {
          "description": "Gets or sets Version in Connection Profile",
          "type": "string"
        },
        "wallet": {
          "description": "Gets or sets Wallet in Connection Profile",
          "type": "string"
        }
      }
    },
    "ConnectionProfileClient": {
      "description": "Gets or sets ConnectionProfileClient",
      "type": "object",
      "properties": {
        "connection": {
          "$ref": "#/definitions/Connection",
          "description": "Gets or sets Connection"
        },
        "organization": {
          "description": "Gets or sets Organization",
          "type": "string"
        }
      }
    },
    "Organization": {
      "description": "Gets or sets public key of the cert pair",
      "type": "object",
      "properties": {
        "mspid": {
          "description": "Gets or sets Mspid",
          "type": "string"
        },
        "peers": {
          "description": "Gets public Peers",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "orderers": {
          "description": "Gets public Orderer",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "NodeProperties": {
      "description": "Gets or sets public key of the cert pair",
      "type": "object",
      "properties": {
        "grpcOptions": {
          "$ref": "#/definitions/GRPCOptions",
          "description": "Gets or sets public key of the cert pair"
        },
        "tlsCACerts": {
          "$ref": "#/definitions/TLSCACertificates",
          "description": "Gets or sets public key of the cert pair"
        },
        "url": {
          "description": "Gets or sets public key of the cert pair",
          "type": "string"
        }
      }
    },
    "Connection": {
      "description": "Gets or sets Connection",
      "type": "object",
      "properties": {
        "timeout": {
          "$ref": "#/definitions/ConnectionTimeout",
          "description": "Gets or sets Timeout"
        }
      }
    },
    "GRPCOptions": {
      "description": "Gets or sets public key of the cert pair",
      "type": "object",
      "properties": {
        "hostnameOverride": {
          "description": "Gets or sets public key of the cert pair",
          "type": "string"
        },
        "ssl-target-name-override": {
          "description": "Gets or sets public key of the cert pair",
          "type": "string"
        }
      }
    },
    "TLSCACertificates": {
      "description": "Gets or sets TlsCaCerts",
      "type": "object",
      "properties": {
        "pem": {
          "description": "Gets or sets Pem of TlsCaCerts",
          "type": "string"
        }
      }
    },
    "ConnectionTimeout": {
      "description": "Gets or sets Timeout",
      "type": "object",
      "properties": {
        "orderer": {
          "description": "Gets or sets Orderer",
          "type": "string"
        },
        "peer": {
          "$ref": "#/definitions/Peer",
          "description": "Gets or sets Peer"
        }
      }
    },
    "Peer": {
      "description": "Gets or sets Peer",
      "type": "object",
      "properties": {
        "endorser": {
          "description": "Gets or sets Endorser",
          "type": "string"
        }
      }
    },
    "HLFMembershipServiceProvider": {
      "description": "HLFMembershipServiceProvider Properties",
      "type": "object",
      "properties": {
        "msp_id": {
          "description": "Gets or sets Membership service provider identifier",
          "type": "string"
        },
        "tlscacerts": {
          "description": "Gets or sets HLF TLS CA root Cert public information",
          "type": "string"
        },
        "cacerts": {
          "description": "Gets or sets HLF enrollment CA root Cert public information",
          "type": "string"
        }
      }
    },
    "NameAvailabilityRequest": {
      "description": "ARM Resource NameAvailabilityRequest payload which exposed as Resource Provider request.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets name to check",
          "type": "string"
        },
        "type": {
          "description": "Gets or sets type of the resource to check",
          "type": "string"
        }
      }
    },
    "NameAvailability": {
      "description": "ARM Resource NameAvailability payload which exposed as Resource Provider response.",
      "type": "object",
      "properties": {
        "nameAvailable": {
          "description": "Gets or sets a value indicating whether gets or sets whether the name is available",
          "type": "boolean"
        },
        "message": {
          "description": "Gets or sets message",
          "type": "string"
        },
        "reason": {
          "description": "Gets or sets name availability reason",
          "enum": [
            "NotSpecified",
            "AlreadyExists",
            "Invalid",
            "Reserved"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "NameAvailabilityReason",
            "modelAsString": true
          }
        }
      }
    },
    "ConsortiumCollection": {
      "description": "Collection of consortium payload",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets collection of consortiums",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Consortium"
          }
        }
      }
    },
    "Consortium": {
      "description": "Consortium payload",
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets blockchain member name",
          "type": "string"
        },
        "protocol": {
          "description": "Gets or sets protocol of the consortium",
          "enum": [
            "NotSpecified",
            "Parity",
            "Quorum",
            "Corda",
            "HyperledgerFabric"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BlockchainProtocol",
            "modelAsString": true
          }
        }
      }
    },
    "ResourceProviderOperationCollection": {
      "description": "Collection of ARM Resource Operation payload which exposed as Resource Provider response.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets collection of operations",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceProviderOperation"
          }
        }
      }
    },
    "ResourceProviderOperation": {
      "description": "ARM Resource Operation payload which exposed as Resource Provider response.",
      "type": "object",
      "properties": {
        "origin": {
          "description": "Gets or sets origin",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets operation name",
          "type": "string"
        },
        "isDataAction": {
          "description": "Gets or sets a value indicating whether the operation is a data action or not",
          "type": "boolean"
        },
        "display": {
          "$ref": "#/definitions/ResourceProviderOperationDisplay",
          "description": "Gets or sets operation display"
        }
      }
    },
    "ResourceProviderOperationDisplay": {
      "description": "ARM Resource Operation.Display payload which exposed as Resource Provider response",
      "type": "object",
      "properties": {
        "provider": {
          "description": "Gets or sets name of the provider for display purposes",
          "type": "string"
        },
        "resource": {
          "description": "Gets or sets name of the resource type for display purposes",
          "type": "string"
        },
        "operation": {
          "description": "Gets or sets name of the operation for display purposes",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets description of the provider for display purposes",
          "type": "string"
        }
      }
    },
    "HLFOrdererNode": {
      "description": "HLF Orderer Node Properties",
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets ARM id of the resource",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Gets HLF Node Type to Orderer",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/HLFOrdererNodeProperties",
          "description": "Gets or sets HLF Orderer node properties"
        },
        "location": {
          "description": "Gets or sets HLF Node Location",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets HLF Node Name",
          "type": "string"
        }
      }
    },
    "HLFOrdererNodeProperties": {
      "description": "HLFOrdererNodeProperties payload in ARM Resource OrdererNode payload",
      "type": "object",
      "properties": {
        "consortiumName": {
          "description": "Gets or sets the consortium name to be created with the orderer",
          "type": "string"
        },
        "provisioningState": {
          "description": "Gets or sets HLF node provision state",
          "enum": [
            "NotSpecified",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Deleted"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "HLFNodeProvisioningState",
            "modelAsString": true
          }
        },
        "dns": {
          "description": "Gets or sets HLF node DNS",
          "type": "string"
        },
        "mspId": {
          "description": "Gets or sets orderer node mspid",
          "type": "string"
        }
      }
    },
    "HLFOrdererNodeCollection": {
      "description": "Collection of ARM Resource OrdererNode payload which exposed as Resource Provider request/response.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets collection of orderer nodes",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/HLFOrdererNode"
          }
        }
      }
    },
    "HLFPeerNode": {
      "description": "HLF Peer Node Properties",
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets ARM id of the resource",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Gets HLF Node Type to Peer",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/HLFPeerNodeProperties",
          "description": "Gets or sets HLF Peer node properties"
        },
        "location": {
          "description": "Gets or sets HLF Node Location",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets HLF Node Name",
          "type": "string"
        }
      }
    },
    "HLFPeerNodeProperties": {
      "description": "HLFPeerNodeProperties payload in ARM Resource PeerNode paylaod",
      "type": "object",
      "properties": {
        "db": {
          "description": "Gets or sets DB for peer node",
          "enum": [
            "NotSpecified",
            "LevelDB",
            "CouchDB"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "HLFDatabaseType",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "description": "Gets or sets HLF node provision state",
          "enum": [
            "NotSpecified",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Deleted"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "HLFNodeProvisioningState",
            "modelAsString": true
          }
        },
        "dns": {
          "description": "Gets or sets HLF node DNS",
          "type": "string"
        },
        "mspId": {
          "description": "Gets or sets orderer node mspid",
          "type": "string"
        }
      }
    },
    "HLFPeerNodeCollection": {
      "description": "Collection of ARM Resource PeerNode payload which exposed as Resource Provider request/response.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets collection of Peer nodes",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/HLFPeerNode"
          }
        }
      }
    },
    "ResourceTypeSkuCollection": {
      "description": "Collection of resource type SKU",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets collection of resource type SKU",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceTypeSku"
          }
        }
      }
    },
    "ResourceTypeSku": {
      "description": "Resource type SKU",
      "type": "object",
      "properties": {
        "resourceType": {
          "description": "Gets or sets resource type",
          "type": "string"
        },
        "skus": {
          "description": "Gets or sets SKUs",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SkuSetting"
          }
        }
      }
    },
    "SkuSetting": {
      "description": "SKU Setting",
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets SKU name",
          "type": "string"
        },
        "tier": {
          "description": "Gets or sets SKU tier",
          "type": "string"
        },
        "locations": {
          "description": "Gets or sets locations",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "requiredFeatures": {
          "description": "Gets or sets required features",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Subscription": {
      "description": "Subscription update format as presribed by ARM in the RP API v2 doc.",
      "required": [
        "state",
        "registrationDate",
        "properties"
      ],
      "type": "object",
      "properties": {
        "state": {
          "description": "Gets or sets state of the subscription defined in the Subscription State Enum.",
          "enum": [
            "Registered",
            "Unregistered",
            "Warned",
            "Suspended",
            "Deleted"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SubscriptionState",
            "modelAsString": true
          }
        },
        "registrationDate": {
          "description": "Gets or sets registration date property.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/SubscriptionRequestProperties",
          "description": "Gets or sets subscription request properties."
        }
      }
    },
    "SubscriptionRequestProperties": {
      "description": "Subscription Request Properties.",
      "type": "object",
      "properties": {
        "tenantId": {
          "description": "Gets or sets the Tenant Id.",
          "type": "string"
        },
        "locationPlacementId": {
          "description": "Gets or sets the Location Placement Id",
          "type": "string"
        },
        "quotaId": {
          "description": "Gets or sets the Quota Id.",
          "type": "string"
        },
        "registeredFeatures": {
          "description": "Gets or sets the Registered Features.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegisteredFeatures"
          }
        }
      }
    },
    "RegisteredFeatures": {
      "description": "Registered Features object.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets the Name.",
          "type": "string"
        },
        "state": {
          "description": "Gets or sets the state.",
          "type": "string"
        }
      }
    },
    "TransactionNode": {
      "description": "ARM Resource TransactionNode payload which exposed as Resource Provider request/response.",
      "type": "object",
      "properties": {
        "location": {
          "description": "Gets or sets transaction node location",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets transaction node name",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/TransactionNodeProperties",
          "description": "Gets or sets blockchain member properties"
        },
        "type": {
          "description": "Gets transaction node ARM resource type",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "description": "Gets transaction node ARM resource id",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TransactionNodeProperties": {
      "description": "TransactionNodeProperties payload in ARM Resource TransactionNode paylaod",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Gets or sets blockchain member provision state",
          "enum": [
            "NotSpecified",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "NodeProvisioningState",
            "modelAsString": true
          }
        },
        "dns": {
          "description": "Gets or sets transaction node dns endpoint",
          "type": "string",
          "readOnly": true
        },
        "publicKey": {
          "description": "Gets or sets transaction node public key",
          "type": "string"
        },
        "userName": {
          "description": "Gets or sets transaction node dns endpoint basic auth user name",
          "type": "string"
        },
        "password": {
          "description": "Gets or sets transaction node dns endpoint basic auth password",
          "type": "string"
        },
        "firewallRules": {
          "description": "Gets or sets firewall rules",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallRule"
          }
        }
      }
    },
    "FirewallRule": {
      "description": "Ip range for firewall rules",
      "type": "object",
      "properties": {
        "ruleName": {
          "description": "Gets or sets the name of firewall rules",
          "type": "string"
        },
        "startIpAddress": {
          "description": "Gets or sets start ip address of the firewall rule range",
          "type": "string"
        },
        "endIpAddress": {
          "description": "Gets or sets end ip address of the firewall rule rage",
          "type": "string"
        }
      }
    },
    "TransactionNodeCollection": {
      "description": "Collection of ARM Resource TransactionNode payload which exposed as Resource Provider request/response.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets collection of transaction nodes",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionNode"
          }
        }
      }
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "Client Api Version.",
      "required": true,
      "type": "string",
      "enum": [
        "2018-06-01-preview"
      ]
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Gets subscription Id which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
      "required": true,
      "type": "string"
    },
    "ResourceGroupParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow"
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}